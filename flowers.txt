
#my_text = """Let's play a game. It's called Would You Rather? We have to choose between two given options."""
#print(my_text.split())


#Prac2
"""
import re
line = "horses are taller than dogs";
searchObj = re.search(r'(.*) are (.*?) .*', line, re.M|re.I)
if searchObj:
    print("searchObj.group() :", searchObj.group())
    print("searchObj.group(1) :", searchObj.group(1))
    print("searchObj.group(2) :", searchObj.group(2))
else:
    print("Nothing found!")
"""
#Prac3
"""
def printArray(arr, size):
    for i in range(size):
        print(arr[i], end = " ")
    print()
    return
def getSuccessor(arr, k, n):
    p = k - 1
    while (arr[p] == n and 0 <= p < k):
        p -= 1
    if (p < 0):
        return 0
    arr[p] = arr[p] + 1
    i = p + 1
    while(i < k):
        arr[i] = 1
        i += 1
    return 1
def printSequences(n, k):
    arr = [0] * k
    for i in range(k):
        arr[i] = 1
    while(1):
        printArray(arr, k)
        if(getSuccessor(arr, k, n) == 0):
            break
    return
n = 3
k = 2
printSequences(n, k)
"""
#Prac4
"""
def stateA(n):
    if len(n) == 0:
        print("String Not Accepted")
        return
    if n[0] == 'a':
        stateB(n[1:])
    elif n[0] == 'b':
        stateH(n[1:])
def stateB(n):
    if len(n) == 0:
        print("String Not Accepted")
    else:
        if n[0] == 'a':
            stateC(n[1:])
        elif n[0] == 'b':
            stateI(n[1:])
def stateC(n):
    if len(n) == 0:
        print("String Not Accepted")
    else:
        if n[0] == 'a':
            stateD(n[1:])
        elif n[0] == 'b':
            stateJ(n[1:])
def stateD(n):
    if len(n) == 0:
        print("String Not Accepted")
    else:
        if n[0] == 'a':
            stateQ2(n)
        elif n[0] == 'b':
            stateE(n[1:])
def stateE(n):
    if len(n) == 0:
        print("String Not Accepted")
    else:
        if n[0] == 'a':
            stateQ2(n)
        elif n[0] == 'b':
            stateF(n[1:])
def stateF(n):
    if len(n) == 0:
        print("String Not Accepted")
    else:
        if n[0] == 'a':
            stateQ2(n[1:])
        elif n[0] == 'b':
            stateG(n[1:])
def stateG(n):
    if len(n) == 0:
        print("String Accepted")
    else:
        if n[0] == 'a':
            stateQ2(n)
        elif n[0] == 'b':
            stateQ2(n)
def stateH(n):
    if len(n) == 0:
        print("String Not Accepted")
    else:
        if n[0] == 'a':
            stateI(n[1:])
        elif n[0] == 'b':
            stateK(n[1:])
def stateI(n):
    if len(n) == 0:
        print("String Not Accepted")
    else:
        if n[0] == 'a':
            stateJ(n[1:])
        elif n[0] == 'b':
            stateL(n[1:])
def stateJ(n):
    if len(n) == 0:
        print("String Not Accepted")
    else:
        if n[0] == 'a':
            stateE(n[1:])
        elif n[0] == 'b':
            stateM(n[1:])
def stateK(n):
    if len(n) == 0:
        print("String Not Accepted")
    else:
        if n[0] == 'a':
            stateL(n[1:])
        elif n[0] == 'b':
            stateN(n[1:])
def stateL(n):
    if len(n) == 0:
        print("String Not Accepted")
    else:
        if n[0] == 'a':
            stateM(n[1:])
        elif n[0] == 'b':
            stateO(n[1:])
def stateM(n):
    if len(n) == 0:
        print("String Not Accepted")
    else:
        if n[0] == 'a':
            stateF(n[1:])
        elif n[0] == 'b':
            stateP(n[1:])
def stateN(n):
    if len(n) == 0:
        print("String Not Accepted")
    else:
        if n[0] == 'a':
            stateO(n[1:])
        elif n[0] == 'b':
            stateQ1(n)
def stateO(n):
    if len(n) == 0:
        print("String Not Accepted")
    else:
        if n[0] == 'a':
            stateP(n[1:])
        elif n[0] == 'b':
            stateQ1(n)
def stateP(n):
    if len(n) == 0:
        print("String Not Accepted")
    else:
        if n[0] == 'a':
            stateG(n[1:])
        elif n[0] == 'b':
            stateQ1(n[1:])
def stateQ1(n):
    print("String Not Accepted")
def stateQ2(n):
    print("String Not Accepted")
n = "abaabb"
stateA(n)
"""
#Prac5
"""
def q1(s, i):
    print("q1->", end=" ");
    if(i == len(s)):
        print("NO");
        return;
    if(s[i]=='0'):
        q1(s, i + 1);
    else:
        q3(s, i + 1);
def q2(s, i):
    print("q2->", end=" ");
    if(i == len(s)):
        print("NO");
        return;
    if(s[i]=='0'):
        q4(s, i + 1);
    else:
        q2(s, i + 1);
def q3(s, i):
    print("q3->", end=" ");
    if(i == len(s)):
        print("YES");
        return;
    if(s[i]=='0'):
        q4(s, i + 1);
    else:
        q2(s, i + 1);
def q4(s, i):
    print("q4->", end=" ");
    if(i == len(s)):
        print("YES");
        return;
    if(s[i]=='0'):
        q1(s, i + 1);
    else:
        q3(s, i + 1);
def q0(s, i):
    print("q0->", end=" ");
    if(i == len(s)):
        print("NO");
        return;
    if(s[i]=='0'):
        q1(s, i + 1);
    else:
        q2(s, i + 1);
if __name__ == "__main__":
    s = "010101";
    print("State transitions are", end=" ");
    q0(s, 0)
"""
#Prac6
"""
def stateq0(n):
    if(len(n)==0):
        print("String Accepted")
    else:
        if(n[0]=='0'):
            stateq0(n[1:])
        elif(n[0]=='1'):
            stateq1(n[1:])
def stateq1(n):
    if(len(n)==0):
        print("String not Accepted")
    else:
        if(n[0]=='0'):
            stateq0(n[1:])
        elif(n[0]=='1'):
            stateq1(n[1:])
n = int(input())
n = bin(n).replace("0b", "")
stateq0(n)
"""
#Prac7
"""
def getSubStringWithEqual012(s):
    arr = [];
    n = len(s);
    for i in range(n):
        for j in range(i, n):
            s1 = "";
            for k in range(i, 1+j):
                s1 += s[k];
            arr.append(s1);
    count = 0;
    for i in range(len(arr)):
        countZero = 0;
        countOne = 0;
        countTwo = 0;
        curs = arr[i];
        for j in range(len(curs)):
            if(curs[j]=='0'):
                countZero += 1;
            if(curs[j]=='1'):
                countOne += 1;
            if(curs[j]=='2'):
                countTwo += 1;
        if(countZero == countOne and countOne == countTwo):
            count += 1;
    return count;
Str = input()
print(getSubStringWithEqual012(Str))
"""
#Prac8
"""
def countSubstring(s, n):
    ans = 0;
    i = 0;
    while(i<n):
        cnt0 = 0;
        cnt1 = 0;
        if(s[i]=='0'):
            while(i<n and s[i]=='0'):
                cnt0 += 1;
                i += 1;
            j = i;
            while(j<n and s[j]=='1'):
                cnt1 += 1;
                j += 1;
        else:
            while(i<n and s[i]=='1'):
                cnt1 += 1;
                i += 1;
            j = i;
            while(j<n and s[j]=='0'):
                cnt0 += 1;
                j += 1;
        ans += min(cnt0, cnt1);
    return ans;
if __name__ == "__main__":
    s = "0001110010";
    n = len(s);
    print(countSubstring(s, n));
"""
